// Generated by ts-to-zod
import { z } from "zod";

export const memoryParamsStateSchema = z.union([
  z.literal("Learning"),
  z.literal("Review"),
  z.literal("Relearning"),
]);

export const memoryParamsSchema = z.union([
  z.undefined(),
  z.object({
    dueEasy: z.string().datetime(),
    dueNormal: z.string().datetime(),
    dueHard: z.string().datetime(),
    dueHarder: z.string().datetime(),
    fsrs_state: memoryParamsStateSchema,
    fsrs_stability: z.number(),
    fsrs_difficulty: z.number(),
    fsrs_elapsed_days: z.number(),
    fsrs_scheduled_days: z.number(),
    fsrs_reps: z.number(),
    fsrs_lapses: z.number(),
    fsrs_last_review: z.string().datetime().optional(),
  }),
]);

export const memorySchema = z.object({
  id: z.string(),
  cardId: z.string(),
  ownerUserId: z.string(),
  memoryParams: memoryParamsSchema.optional(),
});

export const memoryUpdateSchema = memorySchema
  .pick({ id: true })
  .and(memorySchema.partial());

export const memoryInsertSchema = memorySchema
  .partial()
  .and(memorySchema.omit({ id: true }));

export const memoriesNewResponseSchema = z.object({
  memories: z.array(memorySchema),
});

export const memoriesUpdateRequestSchema = z.object({
  memories: z.array(memoryUpdateSchema),
});

export const memoriesUpdateResponseSchema = z.object({});

export const memoriesNewRequestSchema = z.object({
  memories: z.array(memoryInsertSchema),
});
